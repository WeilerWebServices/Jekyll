#!/bin/bash
# set -e

# Builds a PR based on a message received from SQS

function reportFailure {
  if [[ $? != 0 ]]; then
    echo "Build Failure"
    URL=$URL HEAD_BRANCH=$HEAD_BRANCH HEAD_SHA=$HEAD_SHA ./github/checks/fail
    aws sqs delete-message --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL"
    exit
  fi
}

JSON_RESPONSE=$(aws sqs receive-message --queue-url "$QUEUE_URL" --message-attribute-names All)

if [[ -z $JSON_RESPONSE ]]; then
	exit 1
fi

echo "JSON = $JSON_RESPONSE"

                 PR=$(jq -r '.Messages[0].MessageAttributes.pr.StringValue'             <<< $JSON_RESPONSE)
                URL=$(jq -r '.Messages[0].MessageAttributes.url.StringValue'            <<< $JSON_RESPONSE)
           BASE_SHA=$(jq -r '.Messages[0].MessageAttributes["base-sha"].StringValue'    <<< $JSON_RESPONSE)
           HEAD_SHA=$(jq -r '.Messages[0].MessageAttributes["head-sha"].StringValue'    <<< $JSON_RESPONSE)
          BASE_REPO=$(jq -r '.Messages[0].MessageAttributes["base-repo"].StringValue'   <<< $JSON_RESPONSE)
          HEAD_REPO=$(jq -r '.Messages[0].MessageAttributes["head-repo"].StringValue'   <<< $JSON_RESPONSE)
        BASE_BRANCH=$(jq -r '.Messages[0].MessageAttributes["base-branch"].StringValue' <<< $JSON_RESPONSE)
        HEAD_BRANCH=$(jq -r '.Messages[0].MessageAttributes["head-branch"].StringValue' <<< $JSON_RESPONSE)
           HTML_URL=$(jq -r '.Messages[0].MessageAttributes["html-url"].StringValue'    <<< $JSON_RESPONSE)
export INSTALLATION=$(jq -r '.Messages[0].MessageAttributes.installation.StringValue'   <<< $JSON_RESPONSE)
     RECEIPT_HANDLE=$(jq -r '.Messages[0].ReceiptHandle'                                <<< $JSON_RESPONSE)

export STARTED_AT=$(date -u "+%Y-%m-%dT%H:%M:%SZ")
URL=$URL HEAD_BRANCH=$HEAD_BRANCH HEAD_SHA=$HEAD_SHA ./github/checks/start

# If there are already any previous results, delete them
if [[ -f results.csv ]]; then
	rm results.csv
fi

# Test the new PR, and the base branch
# Before each build, we lock the message for 20 minutes + 10 seconds
#   (our maximum allowed build time + a grace period)
aws sqs change-message-visibility --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL" --visibility-timeout 1210
FLAMEGRAPH="true" PR="$PR" REF="$HEAD_SHA" REPO="$HEAD_REPO" ./bench || reportFailure
aws sqs change-message-visibility --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL" --visibility-timeout 1210
     BRANCH="$BASE_BRANCH" REF="$BASE_SHA" REPO="$BASE_REPO" ./bench || reportFailure

# Now that we are done building, we only need to lock the message for long
# enough to generate our report. If something fails, we want the message to
# quickly make its way back into the queue to try again
aws sqs change-message-visibility --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL" --visibility-timeout 30

# Generate report based on tests
PR="$PR" REF="$HEAD_SHA" HTML_URL="$HTML_URL" ./report > "docs/$HEAD_SHA.md"
cat "docs/$HEAD_SHA.md"
./aws/s3/generate-and-upload-site
# Delete report
rm "docs/$HEAD_SHA.md"
# Delete flamegraphs associated with a report
rm -rf "docs/$HEAD_SHA"

# If everything was successful, we can delete this message from SQS
aws sqs delete-message --receipt-handle "$RECEIPT_HANDLE" --queue-url "$QUEUE_URL"

URL=$URL HEAD_BRANCH=$HEAD_BRANCH HEAD_SHA=$HEAD_SHA ./github/checks/complete
